@page "/assets"
@using AssetManagement.Shared.Models 
@using AssetManagementApp.Services 
@inject IAssetClientService AssetService
@inject Microsoft.JSInterop.IJSRuntime JSRuntime

<h3>Asset Inventory</h3>

@if (dashboard == null)
{
    <p><em>Loading dashboard...</em></p>
}
else
{
    <div class="row mb-3">
        <div class="col"><strong>Total:</strong> @dashboard.TotalAssets</div>
        <div class="col"><strong>Assigned:</strong> @dashboard.AssignedAssets</div>
        <div class="col"><strong>Available:</strong> @dashboard.AvailableAssets</div>
        <div class="col"><strong>Repair:</strong> @dashboard.UnderRepairAssets</div>
        <div class="col"><strong>Retired:</strong> @dashboard.RetiredAssets</div>
        <div class="col"><strong>Spare:</strong> @dashboard.SpareAssets</div>
    </div>
}

<div class="mb-3">
    <input class="form-control" placeholder="Search by Serial Number" @bind="searchSerial" />
    <button class="btn btn-primary mt-1" @onclick="ApplySearch">Search</button>
</div>

@if (assets == null)
{
    <p><em>Loading assets...</em></p>
}
else
{
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Serial Number</th>
                <th>Status</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var asset in assets)
            {
                <tr>
                    <td>@asset.Name</td>
                    <td>@asset.SerialNumber</td>
                    <td>@asset.Status</td>
                    <td>
                        <a href="/assets/edit/@asset.Id" class="btn btn-sm btn-primary">Edit</a>
                        <button @onclick="() => DeleteAsset(asset.Id)" class="btn btn-sm btn-danger">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <a href="/assets/create" class="btn btn-success">Add New Asset</a>
}

@code {
    private List<Asset>? assets;
    private AssetSummaryDto? dashboard;
    private string? searchSerial;

    protected override async Task OnInitializedAsync()
    {
        dashboard = await AssetService.GetDashboardDataAsync();
        await LoadAssets();
    }

    private async Task LoadAssets()
    {
        assets = await AssetService.GetAllAssetsAsync();
    }

    private async Task DeleteAsset(int id)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Are you sure you want to delete this asset?"))
        {
            await AssetService.DeleteAssetAsync(id);
            await LoadAssets();
            dashboard = await AssetService.GetDashboardDataAsync();
        }
    }

    private async Task ApplySearch()
    {
        if (!string.IsNullOrEmpty(searchSerial))
        {
            assets = await AssetService.SearchAssetsAsync(null, null, searchSerial, null);
        }
        else
        {
            await LoadAssets();
        }
    }
}
